{"version":3,"sources":["store/reducers/auth/types.ts","utils/rules.ts","store/reducers/event/types.ts","store/reducers/auth/action-creators.ts","hooks/useTypedSelector.ts","components/loginForm.tsx","pages/Login.tsx","utils/date.ts","components/EventCalendar.tsx","components/EventForm.tsx","Routes/index.ts","api/UserService.ts","store/reducers/event/action-creators.ts","store/reducers/action-craetors.ts","hooks/useActions.ts","pages/Event.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","reportWebVitals.ts","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","rules","message","required","EventActionEnum","AuthActionCreators","setUser","user","type","SET_USER","payload","setIsAuth","auth","SET_AUTH","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","login","username","password","dispatch","a","setTimeout","axios","get","response","mockUser","data","find","localStorage","setItem","e","logout","useTypedSelector","useSelector","LoginForm","useDispatch","state","error","isLoading","useState","setUsername","setPassword","className","style","color","onFinish","Item","label","name","value","onChange","target","Password","wrapperCol","offset","span","htmlType","loading","Login","justify","align","formatDate","date","year","getFullYear","month","getMonth","day","getDate","EventCalendar","props","dateCellRender","formatedDate","toDate","currentDayEvents","events","filter","ev","map","index","description","EventForm","author","guest","event","setEvent","submit","selectDate","guests","Option","RouteNames","UserService","EventActionCreators","setGuests","SET_GUESTS","setEvents","SET_EVENTS","fetchGuests","getUsers","console","log","createEvent","getItem","json","JSON","parse","push","stringify","fetchEvents","currentUserEvents","allActionCreators","useActions","bindActionCreators","publicRoutes","path","exact","component","priveateRoutes","modalVisible","setModalVisible","useEffect","onClick","title","visible","footer","onCancel","addNewEvent","AppRouter","isAuth","route","to","EVENT","LOGIN","Navbar","useHistory","Header","theme","selectable","mode","App","Content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c34b9bbf.chunk.js","sourcesContent":["import { IUser } from './../../../models/IUser';\n\nexport interface AuthState {\n    isAuth: boolean,\n    error: string,\n    user: IUser,\n    isLoading: boolean\n}\n\nexport enum AuthActionEnum{\n    SET_AUTH = \"SET_AUTH\",\n    SET_ERROR = \"SET_ERROR\",\n    SET_USER = \"SET_USER\",\n    SET_IS_LOADING = \"SET_IS_LOADING\",\n}\n\nexport interface SetAuthAction{\n    type: AuthActionEnum.SET_AUTH;\n    payload: boolean,\n}\n\nexport interface SetErrorAction {\n    type: AuthActionEnum.SET_ERROR;\n    payload: string,\n} \n\nexport interface SetUserAction {\n    type: AuthActionEnum.SET_USER;\n    payload: IUser,\n} \n\nexport interface SetIsLoadingAction {\n    type: AuthActionEnum.SET_IS_LOADING;\n    payload: boolean,\n} \n\n\nexport type AuthAction = SetAuthAction | SetErrorAction | SetUserAction | SetIsLoadingAction ;","export const rules = {\n    required: ( message: string ) => ({\n        required: true,\n        message\n    })\n}","import { IUser } from \"../../../models/IUser\";\nimport { IEvent } from \"../../../models/IEvent\";\n\nexport interface EventState {\n    guests: IUser[];\n    events: IEvent[];\n}\n\n\n\nexport enum EventActionEnum {\n    SET_GUESTS = \"SET_GUESTS\",\n    SET_EVENTS = \"SET_EVENTS\"\n}\n\nexport interface SetGuestsAction {\n    type: EventActionEnum.SET_GUESTS,\n    payload: IUser[]\n}\n\nexport interface SetEventsAction {\n    type: EventActionEnum.SET_EVENTS,\n    payload: IEvent[]\n}\n\nexport type EventAction = SetEventsAction | SetGuestsAction;","/* import { AuthActionCreators } from './action-creators'; */\nimport { AppDispatch } from './../../index';\nimport { IUser } from './../../../models/IUser';\nimport { AuthActionEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction  } from \"./types\"\nimport axios from 'axios';\n\nexport const AuthActionCreators = {\n    \n    setUser: (user: IUser): SetUserAction => ({type: AuthActionEnum.SET_USER, payload: user}),\n    \n    setIsAuth: (auth: boolean): SetAuthAction => ({ type: AuthActionEnum.SET_AUTH, payload: auth }),\n    \n    setIsLoading: ( payload: boolean ): SetIsLoadingAction => ({ type: AuthActionEnum.SET_IS_LOADING, payload }),\n    \n    setError: (payload: string): SetErrorAction => ({ type: AuthActionEnum.SET_ERROR, payload }),\n    \n    login: ( username: string, password: string ) => async( dispatch: AppDispatch ) => {\n\n        try{\n        \n            dispatch(AuthActionCreators.setIsLoading( true ));\n            setTimeout( async() => {\n                const response = await axios.get<IUser[]>('./users.json'); \n                \n                const mockUser = response.data.find( user => user.username === username );\n                \n                if( mockUser ){\n                    localStorage.setItem('auth', 'true');\n                    localStorage.setItem('username', mockUser.username);\n                    dispatch(AuthActionCreators.setUser(mockUser));\n                    dispatch(AuthActionCreators.setIsAuth(true) );\n                } else {\n                    dispatch(AuthActionCreators.setError('Wrong Login or Password'));\n                }   \n            \n                dispatch(AuthActionCreators.setIsLoading(false))\n            }, 1000)\n\n        } catch( e ){\n\n            dispatch( AuthActionCreators.setError('Error appeared during login') )\n        }\n\n    },\n    logout: ( ) => async(dispatch: AppDispatch) => {\n        dispatch(AuthActionCreators.setIsAuth(false) );\n    }\n\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\n\nimport { RootState } from \"../store\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> =  useSelector;","import { FC, useState } from \"react\";\nimport { Form, Input, Button } from 'antd';\nimport { rules } from \"../utils/rules\";\nimport { useDispatch } from \"react-redux\";\nimport { AuthActionCreators } from \"../store/reducers/auth/action-creators\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nconst LoginForm:FC = () => {\n\n    \n    const dispatch = useDispatch();\n\n    const submit = () => {\n        dispatch( AuthActionCreators.login( username, password ) );\n    }\n\n    const { error, isLoading } = useTypedSelector(state => state.auth);\n    \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    \n    return(\n\n        <div className=\"formWrapper\">\n            \n            {error && <div style={{color: 'red'}}>\n                {error}\n            </div>}\n\n            <Form\n                onFinish={submit}\n            >\n                <Form.Item label='Username' \n                           name ='username'\n                           rules={[rules.required('Please input your name here')]} \n                >\n                    <Input value={username} onChange={ e => setUsername(e.target.value) }/>\n                </Form.Item>\n                \n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[rules.required('Enter your password')]}\n                    >\n                    \n                    <Input.Password value={password} onChange={ e => setPassword( e.target.value ) }/>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n                        Submit\n                    </Button>\n                </Form.Item>\n\n            </Form>\n        </div>\n    )\n}\n\nexport default LoginForm;","import { Row } from \"antd\";\nimport LoginForm from \"../components/loginForm\";\nconst Login = () => {\n    return(\n        <div>\n            <Row justify=\"center\" align=\"middle\" className={'h100'}>\n                <LoginForm />\n            </Row>\n        </div>\n    )\n}\n\nexport default Login;","import { Moment } from \"moment\";\n\nexport const formatDate = (date: Date): string  => {\n    \n    const year = date.getFullYear();\n    const month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth();\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n\n    return `${year}.${month}.${day}`\n}","import React, { FC } from \"react\";\nimport {Calendar} from \"antd\";\nimport { IEvent } from \"../models/IEvent\";\nimport { Moment } from \"moment\";\nimport { formatDate } from \"../utils/date\";\n\ninterface EventCalendarProps{\n    events: IEvent[];\n}\n\nconst EventCalendar:FC<EventCalendarProps> = (props) => {\n        \n    function dateCellRender(value: Moment){\n        const formatedDate = formatDate(value.toDate());\n\n        const currentDayEvents = props.events.filter(ev => ev.date === formatedDate)\n        \n        return(\n            <div>\n                {currentDayEvents.map((ev, index) => \n                    <div key={index}>\n                        {ev.description}\n                    </div>    \n                )}\n            </div>\n        );\n    }\n\n    return (\n        <Calendar\n            dateCellRender={dateCellRender}\n        />\n    )\n}\n\nexport default EventCalendar;","import React, { FC, useState } from \"react\";\nimport {Form,Select, Button, Input, DatePicker, Row} from \"antd\";\nimport { rules } from \"../utils/rules\";\nimport { IUser } from \"../models/IUser\";\nimport { IEvent } from \"../models/IEvent\";\nimport { Moment } from \"moment\";\nimport { formatDate } from \"../utils/date\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\n\ninterface EventFormProps {\n    guests: IUser[],\n    submit: ( event: IEvent) => void\n}\n\nconst EventForm:FC<EventFormProps> = ( props ) => {\n    \n    const [event, setEvent] = useState<IEvent>({\n        \n        author: '',\n        date: '',\n        description: '',\n        guest: ''\n\n    } as IEvent );\n\n    const selectDate = ( date: Moment | null ) => {\n        if( date ){\n\n            //just to check if required format is returned  \n            /* console.log(formatDate(date.toDate())); */\n            setEvent({ ...event,date: formatDate(date.toDate())})\n        \n        }\n    }\n\n    const {user} = useTypedSelector( state => state.auth );\n\n    const submitForm = () => {\n        props.submit( { ...event, author: user.username } )\n    }\n\n    return(\n        <Form onFinish={submitForm} >\n\n            <Form.Item label='Description of the event' \n                    name ='username'\n                    rules={[rules.required('Please input your name here')]} >\n                <Input \n                    onChange={ e => setEvent({...event, description: e.target.value})}\n                \n                />\n            </Form.Item>\n            \n            <Form.Item>\n                <Row justify=\"end\">\n                    <DatePicker \n                        onChange={ (date) => selectDate(date) }\n                        name=\"Event Date\" />\n                </Row>\n            </Form.Item>\n            <Form.Item>\n                <Row justify=\"end\">\n                    <Select onChange={ (guest: string) => setEvent({...event, guest}) }>\n                        \n                        {props.guests.map(guest => \n                            <Select.Option value={guest.username} key={guest.password}>\n                                {guest.username}\n                            </Select.Option>\n                        )}\n\n                    </Select>\n                </Row>\n            </Form.Item>\n\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                <Row justify=\"end\">\n                        <Button type=\"primary\" htmlType=\"submit\" >\n                            Create\n                        </Button>\n                </Row>\n            </Form.Item>\n\n        </Form>\n    )\n}\nexport default EventForm;","import React from \"react\";\nimport Login from \"../pages/Login\";\nimport Event from \"../pages/Event\";\nexport interface IRoute {\n    path: string,\n    component: React.ComponentType;\n    exact?: boolean;\n}\n\nexport const publicRoutes: IRoute[] = [\n    { path: '/login', exact: true, component: Login }\n]\n\nexport const priveateRoutes: IRoute[] = [\n    { path: '/event', exact: true, component: Event }\n]\n\nexport enum RouteNames {\n    LOGIN = '/login',\n    EVENT = '/event'\n}","import { IUser } from './../models/IUser';\nimport axios, { AxiosResponse } from \"axios\";\n\nexport default class UserService {\n\n    static async getUsers(): Promise<AxiosResponse<IUser[]>>{\n        return axios.get<IUser[]>('./users.json')\n    }\n\n}","import { AppDispatch } from './../../index';\nimport { EventActionEnum, SetEventsAction, SetGuestsAction } from './types';\nimport { IUser } from './../../../models/IUser';\nimport { IEvent } from '../../../models/IEvent';\nimport UserService from '../../../api/UserService';\n\nexport const EventActionCreators = {\n    setGuests: (payload: IUser[]): SetGuestsAction => ({ type: EventActionEnum.SET_GUESTS, payload }),\n    setEvents: (payload: IEvent[]): SetEventsAction => ({ type: EventActionEnum.SET_EVENTS, payload }),\n    fetchGuests: () => async(dispatch: AppDispatch) => {\n        try{\n            \n            const response = await UserService.getUsers();\n            dispatch(EventActionCreators.setGuests( response.data ));\n\n        } catch (e) {\n            \n            console.log(e);\n        \n        }\n    },\n    createEvent: (event: IEvent) => async (dispatch: AppDispatch) => {\n        \n        try{\n            \n            const events = localStorage.getItem(\"events\") || '[]';\n            const json = JSON.parse( events ) as IEvent[];\n            json.push(event);\n            dispatch(EventActionCreators.setEvents( json ));\n            localStorage.setItem( 'events', JSON.stringify(json))\n\n        } catch( e ) {  \n            console.log(e);\n        }       \n\n    },\n    fetchEvents: (username: string) => async(dispatch: AppDispatch) => {\n        try{\n            \n            const events = localStorage.getItem(\"events\") || '[]';\n            const json = JSON.parse(events) as IEvent[];\n            const currentUserEvents = json.filter( ev => ev.author === username || ev.guest === username );\n            dispatch(EventActionCreators.setEvents(currentUserEvents));\n\n        } catch( e ) {\n            console.log(e);\n        }\n    } \n}","import { AuthActionCreators } from \"./auth/action-creators\"\nimport { EventActionCreators } from \"./event/action-creators\"\n\n//For comfortable development I combine different action creators there\nexport const allActionCreators = {\n    ...AuthActionCreators,\n    ...EventActionCreators\n}","import { allActionCreators } from './../store/reducers/action-craetors';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch } from 'react-redux';\n\n//simplify usage of dispatch actions ( use it like a function ) \nexport const useActions = () => {\n    const dispatch = useDispatch();\n    return bindActionCreators( allActionCreators, dispatch );\n}","import { Button, Layout, Modal, Row, Form } from \"antd\";\nimport { FC, useEffect, useState } from \"react\";\nimport EventCalendar from \"../components/EventCalendar\";\nimport EventForm  from \"../components/EventForm\";\nimport { useActions } from \"../hooks/useActions\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { IEvent } from \"../models/IEvent\";\n\nconst Event:FC = () => {\n    \n    const [modalVisible, setModalVisible] = useState(false);\n    \n    const {guests, events} = useTypedSelector( state => state.event );\n    const {user} = useTypedSelector( state => state.auth);\n\n    const{fetchGuests, createEvent, fetchEvents} = useActions();\n\n    const addNewEvent = (event: IEvent) => {\n        setModalVisible(false);\n        createEvent(event);\n    }\n\n    useEffect( ()=> {\n        fetchGuests()\n        fetchEvents(user.username)\n    }, [] )\n\n\n\n    return(\n        <Layout>\n            <EventCalendar events={events} />\n            <Row justify=\"center\">\n                <Button onClick={() => setModalVisible( true )}>AddEvent</Button>\n            </Row>\n            <Modal\n                title='Add Event'\n                visible={modalVisible}\n                footer={null}\n                onCancel={()=> setModalVisible(false)}\n            >\n            <EventForm \n                guests={guests}\n                submit={ event => addNewEvent( event )}\n            />\n            </Modal>\n        </Layout>\n    )\n}\n\nexport default Event;","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport React from \"react\";\nimport { priveateRoutes, publicRoutes, RouteNames } from \"../Routes\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\n\nconst AppRouter = () => {\n    \n    const {isAuth} = useTypedSelector( state => state.auth ); \n    console.log( isAuth );\n    return(\n        isAuth ? \n        <Switch>\n            { priveateRoutes.map( route =>\n                <Route path={route.path} \n                       exact={route.exact}\n                       component={route.component}\n                       key={route.path}\n                />\n            ) } \n            <Redirect to={RouteNames.EVENT} />\n        </Switch>\n        :  \n        <Switch>\n            { publicRoutes.map( route =>\n                <Route path={route.path} \n                       exact={route.exact}\n                       component={route.component}\n                       key={route.path}\n                />\n            ) }\n            <Redirect to={RouteNames.LOGIN} />\n        </Switch>\n    )\n}\nexport default AppRouter;","import { Layout, Row, Menu } from \"antd\";\nimport { FC } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {useHistory} from \"react-router-dom\";\nimport { useActions } from \"../hooks/useActions\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { RouteNames } from \"../Routes\";\nimport { allActionCreators } from \"../store/reducers/action-craetors\";\nimport { AuthActionCreators } from \"../store/reducers/auth/action-creators\";\n\nconst Navbar:FC = () => {\n    \n    const router = useHistory();\n    const dispatch = useDispatch();\n\n    const {isAuth} = useTypedSelector(state=>state.auth);\n    \n    const {logout} = useActions();\n\n    return(\n        <Layout.Header>\n            <Row justify=\"end\">\n                 <Menu theme='dark' selectable={false} mode=\"horizontal\" >\n                    {isAuth \n                        ?\n                        <Menu.Item onClick={logout}>\n                            Logout\n                        </Menu.Item>   \n                        :\n                        <Menu.Item>\n                            Login\n                        </Menu.Item>\n                    }\n                </Menu>\n            </Row>\n        </Layout.Header>\n    )\n}\n\nexport default Navbar;","import React, { FC, useEffect } from 'react';\nimport AppRouter from './components/AppRouter'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { Layout } from 'antd';\nimport { useActions } from './hooks/useActions';\nimport { IUser } from './models/IUser';\n\nconst App:FC = () => {\n  \n  const {setUser, setIsAuth} = useActions();\n  \n  useEffect(() => {\n    \n    if( localStorage.getItem('auth') ){\n        setUser({username: localStorage.getItem('username' || '' )} as IUser)\n        setIsAuth(true);\n    }\n\n  },[])\n  \n  return (\n      <Layout>\n        <Navbar />\n        <Layout.Content>\n          <AppRouter />\n        </Layout.Content>\n      </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IUser } from './../../../models/IUser';\nimport { AuthAction, AuthActionEnum, AuthState } from './types';\n\nconst initialState:AuthState = {\n    isAuth: false,\n    error: \"\",\n    isLoading: false,\n    user: { } as IUser,\n}\n\nexport default function authReducer( state=initialState, action: AuthAction ):AuthState{\n    switch (action.type) {\n        case AuthActionEnum.SET_AUTH:\n           return{ ...state, isAuth: action.payload, isLoading: false }\n        case AuthActionEnum.SET_USER:\n            return{ ...state, user: action.payload }\n        case AuthActionEnum.SET_ERROR:\n            return{ ...state, error: action.payload, isLoading: false }\n        case AuthActionEnum.SET_IS_LOADING:\n            return {...state, isLoading: action.payload }\n        default:\n            return state;\n    }   \n}","import { EventAction, EventActionEnum, EventState } from \"./types\";\n\nconst initialState:EventState = {\n    guests:[],\n    events:[],\n}\n\nexport default function EventReducer(state=initialState, action: EventAction): EventState{\n    switch (action.type) {\n        case EventActionEnum.SET_GUESTS:\n            return {...state, guests: action.payload}\n        case EventActionEnum.SET_EVENTS:\n            return {...state, events: action.payload}\n        \n        default:\n            return state;\n    }\n}","import auth from './auth';\nimport event from './event';\n\nexport default {\n    auth,\n    event\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from'./reducers';\n\nconst rootReducer = combineReducers( reducers );\n\nexport const store = createStore( rootReducer, applyMiddleware( thunk ) );\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}